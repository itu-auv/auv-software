<?xml version="1.0"?>
<launch>
  <arg name="namespace" default="taluy" />
  <arg name="rate" default="20" />
  <arg name="use_gui" default="false" />
  <arg name="start_state_publisher" default="false" />
  <arg name="command_timeout" default="0.1" />
  <arg name="config_file" default="$(find auv_control)/config/default.yaml" />
  <arg name="start_visual_servoing" default="true" />

  <include file="$(find auv_description)/launch/start_state_publisher.launch"
    if="$(arg start_state_publisher)">
    <arg name="namespace" value="$(arg namespace)" />
    <arg name="use_gui" value="$(arg use_gui)" />
  </include>

  <group ns="$(arg namespace)">
    <node pkg="auv_control" type="auv_control_node" name="auv_control_node" output="screen">
      <param name="rate" value="$(arg rate)" />
      <param name="config_file" value="$(arg config_file)" />

      <remap from="odometry" to="odometry" />
      <remap from="cmd_vel" to="cmd_vel" />
      <remap from="cmd_pose" to="cmd_pose" />
      <remap from="acceleration" to="acceleration" />
      <remap from="enable" to="enable" />

      <remap from="wrench" to="wrench" />
      <rosparam file="$(arg config_file)" command="load" ns="" />
    </node>

    <node pkg="auv_control" type="thruster_manager_node" name="thruster_manager_node"
      output="screen">
      <param name="rate" value="$(arg rate)" />
      <remap from="power" to="mainboard/power_sensor/power" />
      <rosparam file="$(arg config_file)" command="load" ns="" />
    </node>

    <node pkg="auv_control" type="reference_pose_publisher.py" name="reference_pose_publisher_node"
      output="screen">
      <param name="update_rate" value="$(arg rate)" />
      <param name="command_timeout" value="$(arg command_timeout)" />

      <remap from="odometry" to="odometry" />
      <remap from="set_depth" to="set_depth" />
      <remap from="cmd_vel" to="cmd_vel" />
      <remap from="cmd_pose" to="cmd_pose" />
      <remap from="enable" to="enable" />
    </node>


    <node pkg="auv_control" type="align_frame_controller.py" name="align_frame_controller"
      output="screen">
      <param name="rate" value="$(arg rate)" />

      <remap from="align_frame/start" to="control/align_frame/start" />
      <remap from="propulsion_board/status" to="propulsion_board/status" />
      <remap from="cancel_control" to="control/align_frame/cancel" />
      <!-- <remap from="cmd_vel" to=""/> -->
    </node>

    <node pkg="auv_control" type="battery_monitor_node.py" name="battery_monitor_node"
      output="screen">
      <remap from="power" to="mainboard/power_sensor/power" />
      <param name="minimum_voltage_threshold" value="13.0" />
      <param name="voltage_warn_threshold" value="15.0" />
      <param name="power_message_timeout" value="5" />
      <param name="min_log_interval" value="1.0" />
      <param name="max_log_interval" value="120.0" />
    </node>

    <group if="$(arg start_visual_servoing)">
      <node pkg="auv_control" type="visual_servoing_controller.py" name="visual_servoing_controller"
        output="screen">
        <rosparam file="$(find auv_control)/config/visual_servoing_params.yaml" command="load" />
      </node>
    </group>

  </group>

</launch>
