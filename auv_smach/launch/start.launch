<?xml version="1.0"?>
<launch>
    <arg name="namespace" default="taluy_mini" />
    <arg name="enable_rate" default="20" />
    <param name="/smach/max_linear_velocity" value="0.3" />
    <param name="/smach/max_angular_velocity" value="0.45" />

    <!-- State Mapping Definitions -->
    <arg name="state_map" default="
        init:INITIALIZE,
        gate:NAVIGATE_THROUGH_GATE,
        gate_vs:NAVIGATE_THROUGH_GATE_VS,
        slalom:NAVIGATE_THROUGH_SLALOM,
        buoy:NAVIGATE_AROUND_RED_BUOY,
        torpedo:NAVIGATE_TO_TORPEDO_TASK,
        bin:NAVIGATE_TO_BIN_TASK,
        octagon:NAVIGATE_TO_OCTAGON_TASK,
        acoustic_tx:ACOUSTIC_TRANSMITTER,
        acoustic_rx:ACOUSTIC_RECEIVER,
        return:RETURN_HOME
    "/>

    <!-- Test Mode Configuration -->
    <arg name="test_mode" default="false" doc="Enable test mode for state machine"/>
    <arg name="sim" default="false" doc="Enable simulation mode for state machine"/>

    <!-- Full Mission States -->
    <arg name="full_mission_states" default="[
        'INITIALIZE',
        'NAVIGATE_THROUGH_GATE',
        'NAVIGATE_THROUGH_GATE_VS',
        'NAVIGATE_THROUGH_SLALOM',
        'NAVIGATE_AROUND_RED_BUOY',
        'NAVIGATE_TO_TORPEDO_TASK',
        'NAVIGATE_TO_BIN_TASK',
        'NAVIGATE_TO_OCTAGON_TASK',
        'ACOUSTIC_TRANSMITTER',
        'ACOUSTIC_RECEIVER',
        'RETURN_HOME'
    ]" doc="Full sequence of mission states"/>

    <!-- Test Mission States -->
    <arg name="test_states" default="[
        'init'
    ]" doc="States to execute in test mode"/>

    <group ns="$(arg namespace)">
        <!-- Main State Machine Node -->
        <node name="main_state_machine" pkg="auv_smach" type="main_state_machine.py" output="screen">
            <remap from="propulsion_board/status" to="propulsion_board/status"/>
            <param name="~base_link" value="$(arg namespace)/base_link"/>
            <param name="sim" value="$(arg sim)"/>

            <!-- common.py -->
            <remap from="clear_object_transforms" to="map/clear_object_transforms"/>
            <remap from="torpedo_1/launch" to="actuators/torpedo_1/launch"/>
            <remap from="torpedo_2/launch" to="actuators/torpedo_2/launch"/>
            <remap from="ball_dropper/drop" to="actuators/ball_dropper/drop"/>
            <remap from="align_frame/cancel" to="control/align_frame/cancel"/>
            <remap from="align_frame/start" to="control/align_frame/start"/>
            <remap from="enable" to="enable"/>
            <remap from="propulsion_board/status" to="propulsion_board/status"/>
            <remap from="odometry" to="odometry"/>
            <remap from="cmd_vel" to="cmd_vel"/>

            <!-- camera_detection_pose_estimator.py -->
            <remap from="enable_front_camera_detections" to="vision/enable_front_camera_detections"/>
            <remap from="enable_bottom_camera_detections" to="vision/enable_bottom_camera_detections"/>
            <remap from="set_front_camera_focus" to="vision/set_front_camera_focus"/>

            <param name="enable_rate" value="$(arg enable_rate)"/>

            <!-- gate.py -->
            <remap from="set_transform_gate_trajectory" to="toggle_gate_trajectory"/>
            <remap from="odometry" to="odometry"/>
            <remap from="wrench" to="wrench"/>
            <remap from="toggle_gate_trajectory" to="toggle_gate_trajectory"/>
            <remap from="dvl_to_odom_node/enable" to="dvl_to_odom_node/enable"/>

            <!--initialize.py-->
            <remap from="set_depth" to="set_depth"/>
            <remap from="set_pose" to="set_pose"/>
            <remap from="reset_odometry" to="reset_odometry"/>
            <remap from="dvl/enable" to="sensors/dvl/enable"/>
            <remap from="localization_enable" to="auv_localization_node/enable"/>

            <!--red_buoy.py-->
            <remap from="set_object_transform" to="map/set_object_transform"/>

            <!--bin.py-->
            <remap from="toggle_bin_trajectory" to="toggle_bin_trajectory"/>

            <param name="test_mode" value="$(arg test_mode)"/>
            <rosparam param="state_map" subst_value="true">$(arg state_map)</rosparam>
            <rosparam param="full_mission_states" subst_value="true">$(arg full_mission_states)</rosparam>
            <param name="test_states" value="$(arg test_states)"/>
            <!-- Load path planner parameters in the node -->
            <rosparam file="$(find auv_bringup)/config/$(arg namespace)/path_planner_config.yaml" command="load"/>
            <!-- Load mission target selection parameters -->
            <rosparam file="$(find auv_bringup)/config/$(arg namespace)/mission_target_selection.yaml" command="load"/>
        </node>
    </group>
</launch>
