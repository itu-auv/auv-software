<launch>
    <arg name="debug" default="0" />
    <arg name="namespace" default="taluy" />
    <arg name="use_ned_frame" default="false" />

    <!-- Spawn Pose -->
    <arg name="x" default="0" />
    <arg name="y" default="0" />
    <arg name="z" default="-1" />
    <arg name="roll" default="3.1415" />
    <arg name="pitch" default="0.0" />
    <arg name="yaw" default="0.0" />

    <group ns="$(arg namespace)">
        <group if="$(arg use_ned_frame)">
            <param name="robot_description"
                command="$(find xacro)/xacro '$(find auv_sim_description)/urdf/taluy_sim.urdf.xacro' --inorder
                debug:=$(arg debug)
                namespace:=$(arg namespace)
                inertial_reference_frame:=world_ned" />
        </group>

        <!-- <node name="stereo_image_proc" pkg="stereo_image_proc" type="stereo_image_proc"
        ns="zed"/> -->
        <group unless="$(arg use_ned_frame)">
            <param name="robot_description"
                command="$(find xacro)/xacro '$(find auv_sim_description)/urdf/taluy_sim.urdf.xacro' --inorder
                debug:=$(arg debug)
                namespace:=$(arg namespace)
                inertial_reference_frame:=world" />
        </group>

        <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
        <node name="urdf_spawner" pkg="uuv_descriptions" type="spawn_model" respawn="false"
            output="screen"
            args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg namespace) -param /$(arg namespace)/robot_description" />

        <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="world_ned_frame_publisher"
        args="0 0 0 1.5707963267948966 0 3.141592653589793 world world_ned" /> -->

        <!-- Publish robot model for ROS -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
            respawn="true" output="screen">
            <param name="robot_description" value="/$(arg namespace)/robot_description" />
            <param name="use_tf_static" value="true" />
        </node>


    </group>

    <!-- Start Odom/World publisher -->
    <!-- <node name="world_to_odom_tf_publisher" pkg="auv_sim_description"
    type="world_to_odom_tf_publisher.py" args="" output="screen" respawn="true">
        <param name="initial_reference_pos_topic" value="/turquoise/sensors/pressure/depth/pose"
    type="str"/>
        <param name="rate" value="100" type="int"/>
        <param name="timeout" value="100" type="int"/>
    </node> -->
</launch>
