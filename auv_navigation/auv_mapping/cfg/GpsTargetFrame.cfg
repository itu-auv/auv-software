#!/usr/bin/env python
PACKAGE = "auv_mapping"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("starting_latitude_deg", double_t, 0, "Starting GPS latitude in degrees", 0.0, -90, 90)
gen.add("starting_longitude_deg", double_t, 0, "Starting GPS longitude in degrees", 0.0, -180, 180)
gen.add("target_latitude_deg", double_t, 0, "Target GPS latitude in degrees", 0.0, -90, 90)
gen.add("target_longitude_deg", double_t, 0, "Target GPS longitude in degrees", 0.0, -180, 180)

# Placeholder Cartesian coordinates (kept for compatibility but unused)
gen.add("starting_x_m", double_t, 0, "Starting X coordinate in meters (unused)", 0.0, -1000, 1000)
gen.add("starting_y_m", double_t, 0, "Starting Y coordinate in meters (unused)", 0.0, -1000, 1000)
gen.add("starting_z_m", double_t, 0, "Starting Z coordinate in meters (unused)", 0.0, -1000, 1000)
gen.add("target_x_m", double_t, 0, "Target X coordinate in meters (unused)", 0.0, -1000, 1000)
gen.add("target_y_m", double_t, 0, "Target Y coordinate in meters (unused)", 0.0, -1000, 1000)
gen.add("target_z_m", double_t, 0, "Target Z coordinate in meters (unused)", 0.0, -1000, 1000)
gen.add("facing_exit", bool_t, 0, "If true, place gps_target in front of base_link by GPS distance", False)
gen.add("facing_distance_m", double_t, 0, "If >0, place gps_target this far in front of base_link (meters)", 0.0, 0.0, 1000.0)

exit(gen.generate(PACKAGE, "auv_mapping", "GpsTargetFrame"))
