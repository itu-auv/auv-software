---
# Parameters common to both global and local costmaps
# Typically related to robot footprint, sensor sources, and map layers

# Robot Footprint Configuration (adjust based on actual AUV dimensions)
# Using radius for simplicity, assuming roughly circular projection
robot_radius: 0.5 # meters

# Inflation layer parameters (adjust cost scaling and radius as needed)
inflation_layer:
  cost_scaling_factor: 5.0  # Exponential decay factor
  inflation_radius: 1.0     # Max distance from obstacle Costmap2DROS will inflate

# Layer Definitions
# Voxel layer for 3D obstacle data from simulation (e.g., depth camera)
voxel_layer:
  enabled: true
  observation_sources: depth_camera_source # Arbitrary name for the source
  depth_camera_source:
    data_type: PointCloud2             # Type of message
    topic: /taluy/depth/points         # Topic name for our depth camera
    marking: true                      # Use data to add obstacles
    clearing: true                     # Use data to remove obstacles
    min_obstacle_height: 0.0           # Minimum height of points to consider
    max_obstacle_height: 2.0           # Maximum height of points to consider (relative to sensor frame)
    obstacle_range: 5.0                # Max range to consider points (meters)
    raytrace_range: 6.0                # Max range to clear points (meters)
    sensor_frame: taluy/base_link/depth_camera_link # Frame of the sensor

# Example: Obstacle layer using a laser scanner (replace with actual AUV sensors like sonar)
# obstacle_layer:
#   observation_sources: laser_scan_sensor
#   laser_scan_sensor: {sensor_frame: laser_frame, data_type: LaserScan, topic: scan, marking: true, clearing: true}

# Example: Static map layer (if using a pre-built map)
# static_layer:
#   map_topic: /map
#   subscribe_to_updates: true

# Global coordinate frame and robot base frame
map_type: voxel # Voxel grid is often better for 3D environments
origin_z: 0.0
z_resolution: 0.1
z_voxels: 10 # Number of voxels in z direction (adjust based on operational depth)
unknown_threshold: 9
mark_threshold: 0

global_frame: odom      # Frame attached to the map (or odom if no map)
robot_base_frame: base_link # Frame attached to the robot center

# Update frequencies
transform_tolerance: 0.5 # seconds # Increased tolerance might be needed depending on TF latency
update_frequency: 5.0    # Hz
publish_frequency: 2.0   # Hz
